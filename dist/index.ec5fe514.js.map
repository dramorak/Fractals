{"mappings":"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","sources":["init.js"],"sourcesContent":["/* ++++++++++++++++++++++++++++++++++++++++++++++++++++\n Object/Function definition page \n+++++++++++++++++++++++++++++++++++++++++++++++++++++++ */\n\nvar startRender = true;\nvar test = false;\n\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar objectRenderArray = [];\n\nvar meta = {\n  // stores relevant information about the current drawstyle.\n  style: Line,\n  colorStyle: \"drawColor\",\n  thickness: 2, // thickness of lines (only applies to stroke type objects)\n  drawColor: new Color(0, 0, 0), // color of drawn objects\n  backgroundColor: new Color(255, 255, 255), // background color\n  fillStyle: \"stroke\", // outline vs fill\n  clrscale: 16, //controls color fading. Higher value indicates slower fading.\n  fadeVal: 0.4, // controls how quickly colors fade into the fractal.\n\n  renderThreshold: 1, // limits drawing of objects to those whose sizes are larger than this value\n  maxDepth: 100, // limits max depth. Sort of deprecated, switched to size limitation.\n  maxScale: 0.95, // limits the max scale of a transformation. Must be less than one, otherwise it won't converge, and the program will run infinitely.\n  maxSize: 10000, // deprecated\n  operationLimit: 4000, // number of draw operations called in a single frame.\n  unit: 200, // 1 unit is defined as 100 pixels.\n};\nvar metaCopy = {...meta}; //copy original state, in case we need to restore later.\n\nvar fractal = {\n  objects: [],\n  branches: [],\n  contexts: [],\n  drawState: {\n    opcount: 0, // counts the number of operations done this frame.\n    i: 0, // context counter number\n    stack: [], // stack\n  },\n  draw: function () {\n    // draw top elements first\n\n    while (fractal.drawState.i < fractal.objects.length) {\n      // Trunk section\n      //  push local state onto stack, if empty.\n      if (fractal.drawState.stack.length == 0) {\n        fractal.drawState.stack.push(fractal.objects[fractal.drawState.i]);\n        fractal.drawState.stack.push(0);\n      }\n      //  Note: The 'local state' of the stack are 2 values: The node to be drawn, and a number representing the number of branches yet to be drawn.\n      while (fractal.drawState.stack.length > 0) {\n        node = fractal.drawState.stack[fractal.drawState.stack.length - 2];\n        i = fractal.drawState.stack[fractal.drawState.stack.length - 1];\n\n        if (node.size < meta.renderThreshold) {\n          // if the node is too small.\n          fractal.drawState.stack.pop();\n          fractal.drawState.stack.pop();\n          continue;\n        }\n        if (i == 0) {\n          // if It's the first time encountering this node.\n          node.draw(fractal.contexts[fractal.drawState.i]);\n          fractal.drawState.opcount += node.drawTime; // number of lines in the image\n        }\n        if (i == fractal.branches.length) {\n          // If all children of this node have been drawn\n          // pop last two element off, and continue.\n          fractal.drawState.stack.pop();\n          fractal.drawState.stack.pop();\n          continue;\n        } else {\n          //otherwise\n\n          //update current node drawn number\n          fractal.drawState.stack[fractal.drawState.stack.length - 1] += 1;\n\n          //push new node onto the stack\n          let trans = fractal.branches[i].transformation;\n          fractal.drawState.stack.push(trans.apply(node)); // push new node on\n          fractal.drawState.stack.push(0); // push todo variable.\n        }\n        //If oplimit has been reached, stop drawing.\n        if (fractal.drawState.opcount >= meta.operationLimit) {\n          fractal.drawState.opcount = 0;\n          return;\n        }\n      }\n\n      // set opcount to 0 for the next draw\n      fractal.drawState.opcount = 0;\n      // increment fractal.drawState.i\n      fractal.drawState.i += 1;\n    }\n  },\n\n  resetState: function () {\n    fractal.drawState.opcount = 0;\n    fractal.drawState.i = 0;\n    fractal.drawState.stack = [];\n  },\n\n  push: function (\n    start,\n    end,\n    type = \"unspecified\",\n    drawColor = black,\n    thickness = 1,\n    fillStyle = \"stroke\",\n    fade = 0\n  ) {\n    if (type == \"unspecified\") {\n      type = meta.style;\n    }\n\n    if (type == Branch) {\n      //NOTE Introducing a new branch is a violent process. I'll probably have to clear all of the contexts.\n\n      //Clear all canvases (necessary?)\n      fractal.contexts.forEach((ctx) => clear(ctx));\n\n      //reset the fractal.drawState\n      fractal.resetState();\n\n      //Add a transformation to fractal.branches\n      fractal.branches.push(\n        new Branch(\n          Transformation.generateTransformation1(\n            start,\n            end,\n            meta.unit,\n            drawColor,\n            fade\n          )\n        )\n      );\n    } else {\n      // drawobject\n      //create a canvas\n      const ctx = createCanvas();\n\n      //modify it's transform\n      ctx.setTransform(\n        1,\n        0,\n        0,\n        -1,\n        width/2 + 71,\n        height/2\n      );\n\n      //add context to the list of contexts.\n      fractal.contexts.push(ctx);\n\n      //push an object onto fractal.objects\n      let trans = Transformation.generateTransformation3(start, end);\n      let new_obj = new type(trans, drawColor, thickness, fillStyle, fade)\n      fractal.objects.push(new_obj);\n\n      //draw the depth 0 object immediately\n      new_obj.draw(ctx);\n    }\n  },\n\n  pop: function (type = \"unspecified\") {\n    if (type == \"unspecified\") {\n      type = meta.style;\n    }\n    // take the current draw style (branch, trunk) and pop.\n    if (type === Branch && fractal.branches.length > 0) {\n      if (fractal.branches.length == 0) {\n        return;\n      }\n      // remove branch from branch list\n      fractal.branches.pop();\n      // reset the fractalState\n      fractal.resetState();\n      // clear all canvases.\n      fractal.contexts.forEach((ctx) => clear(ctx));\n    } else { // if object\n      if (fractal.objects.length == 0) {\n        return;\n      }\n      if (fractal.drawState.i == fractal.objects.length) {\n        // if the object is already drawn\n        fractal.drawState.i -= 1;\n      } else if (fractal.drawState.i == fractal.objects.length - 1) {\n        // if the object being popped is also the object being drawn\n        // stop drawing the current object\n        fractal.drawState.stack = [];\n      }\n      //remove object\n      fractal.objects.pop();\n      //remove the context from array, then delete it.\n      let ctx = fractal.contexts.pop();\n      //ctx.canvas.parentElement.removeChild(ctx.canvas);\n      ctx.canvas.remove();\n    }\n  },\n};\n\nlet actionObject = {\n  // undo/redo methods\n  ctrl: {\n    z: function () {\n      //Undo action\n\n      if (actions.undoList.length != 0) {\n        // get last action\n        let lastAction = actions.undoList.pop();\n\n        // undo the last action, save the unundo\n        let unundo = lastAction();\n\n        //push the unundo onto unundo list\n        actions.unundoList.push(unundo);\n      }\n    },\n    y: function () {\n      //un-undo action.\n\n      if (actions.unundoList.length != 0) {\n        //get last action\n        let lastAction = actions.unundoList.pop();\n\n        // undo the last action, save the undo\n        let undo = lastAction();\n\n        //push the undo onto the list\n        actions.undoList.push(undo);\n      }\n    },\n  },\n  noctrl: {},\n};\n\nvar actions = {\n  // holds a history of the objects added to fractal.\n  undoList: [],\n  unundoList: [],\n};\n\n/* \nClass definitions\n*/\ncolorMap = {\n  black: new Color(0, 0, 0),\n  grey: new Color(128, 128, 128),\n  darkred: new Color(\"8B\", \"00\", \"00\", (hex = true)),\n  red: new Color(\"FF\", \"00\", \"00\", (hex = true)),\n  orange: new Color(\"FF\", \"45\", \"00\", (hex = true)),\n  yellow: new Color(\"FF\", \"FF\", \"00\", (hex = true)),\n  lawngreen: new Color(\"7C\", \"FC\", \"00\", (hex = true)),\n  green: new Color(\"00\", \"80\", \"00\", (hex = true)),\n  cadetblue: new Color(\"5F\", \"9E\", \"A0\", (hex = true)),\n  blue: new Color(\"00\", \"00\", \"FF\", (hex = true)),\n  violet: new Color(\"EE\", \"82\", \"EE\", (hex = true)),\n  purple: new Color(\"80\", \"00\", \"80\", (hex = true)),\n  cyan: new Color(\"00\", \"FF\", \"FF\", (hex = true)),\n  lightsalmon: new Color(\"FF\", \"A0\", \"7A\", (hex = true)),\n  lightyellow: new Color(\"FF\", \"FF\", \"E0\", (hex = true)),\n  lime: new Color(\"00\", \"FF\", \"00\", (hex = true)),\n  mistyrose: new Color(\"FF\", \"E4\", \"E1\", (hex = true)),\n  slateblue: new Color(\"6A\", \"5A\", \"CD\", (hex = true)),\n  tomato: new Color(\"FF\", \"63\", \"47\", (hex = true)),\n  white: new Color(\"FF\", \"FF\", \"FF\", (hex = true)),\n};\n\nblack = colorMap.black;\nwhite = colorMap.white;\n\nfunction Color(r, g, b, hex = false) {\n  if (hex) {\n    this.r = hexToDecimal(r);\n    this.g = hexToDecimal(g);\n    this.b = hexToDecimal(b);\n  } else {\n    this.r = r;\n    this.b = b;\n    this.g = g;\n  }\n}\nColor.prototype.toString = function (hex = false) {\n  if (hex) {\n    return `#${zeroFill(decimalToHex(this.r), 2)}${zeroFill(\n      decimalToHex(this.g),\n      2\n    )}${zeroFill(decimalToHex(this.b), 2)}`;\n  } else {\n    return `rgb(${this.r},${this.g},${this.b})`;\n  }\n};\nfunction Branch(transformation) {\n  this.transformation = transformation;\n}\n\nfunction Point(x, y) {\n  this.x = x;\n  this.y = y;\n}\n\nfunction Shape(\n  points = [],\n  size = undefined,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade  = 0\n) {\n  this.points = points;\n  this.color = color;\n  this.thickness = thickness;\n  this.style = style;\n  this.fade = fade;\n  if (size === undefined) {\n    this.size = radius(points);\n  } else {\n    this.size = size;\n  }\n\n  this.build = function (ctx) {\n    let last = this.points.length - 1;\n    ctx.moveTo(this.points[last].x, this.points[last].y);\n    this.points.forEach((el) => ctx.lineTo(el.x, el.y));\n  };\n\n  this.draw = function (ctx) {\n    // Check to see if the shape is in frame, and if it isn't, don't draw\n    let x = this.points[0].x;\n    let y = this.points[0].y;\n\n    if (\n      x + this.size <= boundaries.left ||\n      x - this.size >= boundaries.right ||\n      y + this.size <= boundaries.bottom ||\n      y - this.size >= boundaries.top\n    ) {\n      return;\n    } else if (this.size < 2){\n        ctx.fillStyle = this.color;\n        ctx.fillRect(this.points[0].x, this.points[0].y, this.size, this.size);\n    }else {\n      if (this.style === \"stroke\" || this.points.length === 2) {\n        ctx.lineWidth = this.thickness;\n        ctx.strokeStyle = this.color;\n        ctx.beginPath();\n        this.build(ctx);\n        ctx.stroke();\n      } else if (this.style === \"fill\") {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        this.build(ctx);\n        ctx.fill();\n      } else {\n      }\n    }\n  };\n}\nfunction Line(transformation, color = black, thickness = 1, style = \"stroke\", fade = 0) {\n  this.template = [new Point(0, 0), new Point(0, 1)];\n  this.drawTime = 1.2;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n\n  this.build = function (ctx) {\n    // unique draw function for performance reasons.\n    ctx.moveTo(this.points[0].x, this.points[0].y);\n    ctx.lineTo(this.points[1].x, this.points[1].y);\n  };\n}\nfunction Triangle(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  this.template = [new Point(-0.5, 0), new Point(0.5, 0), new Point(0, 1)];\n  this.drawTime = 3;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction Curve(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {}\nfunction Oval(transformation, color = black, thickness = 1, style = \"stroke\", fade = 0) {}\nfunction Circle(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  this.template = [new Point(0, 0.5)];\n  this.drawTime = 4;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n  this.build = function (ctx) {\n    //special draw function.\n    ctx.moveTo(this.points[0].x + this.size / 2, this.points[0].y);\n    ctx.arc(this.points[0].x, this.points[0].y, this.size / 2, 0, 2 * Math.PI);\n  };\n}\nfunction RightTriangle(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction Rectangle(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  this.template = [\n    new Point(-0.5, 0),\n    new Point(0.5, 0),\n    new Point(0.5, 1),\n    new Point(-0.5, 1),\n  ];\n  this.drawTime = 4;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction Pentagon(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction Hexagon(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  // x = 0.2257\n  // 1-x = 0.7743\n  this.template = [\n    new Point(0, 1),\n    new Point(0.433, 0.75),\n    new Point(0.433, 0.25),\n    new Point(0, 0),\n    new Point(-0.433, 0.25),\n    new Point(-0.433, 0.75),\n  ];\n  this.drawTime = 6;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction Septagon(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction Octagon(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  //x = 0.292893\n  // x-0.5 = -0.2071\n  // 0.5 -x = 0.2071\n  // 1-x = 0.7071\n  this.template = [\n    new Point(-0.2071, 0),\n    new Point(0.2071, 0),\n    new Point(0.5, 0.292893),\n    new Point(0.5, 0.7071),\n    new Point(0.2071, 1),\n    new Point(-0.2071, 1),\n    new Point(-0.5, 0.7071),\n    new Point(-0.5, 0.292893),\n  ];\n  this.drawTime = 8;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction RoundedRectangle(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction Polygon(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction RightArrow(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction LeftArrow(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction UpArrow(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction DownArrow(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\nfunction FourStar(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  this.template = [\n    new Point(0, 0),\n    new Point(0.125, 0.375),\n    new Point(0.5, 0.5),\n    new Point(0.125, 0.625),\n    new Point(0, 1),\n    new Point(-0.125, 0.625),\n    new Point(-0.5, 0.5),\n    new Point(-0.125, 0.375),\n  ];\n  this.drawTime = 8;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction FiveStar(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\",\n  fade = 0\n) {\n  this.template = [\n    new Point(-0.306, 0),\n    new Point(0.002, 0.218),\n    new Point(0.312, 0),\n    new Point(0.204, 0.378),\n    new Point(0.5, 0.608),\n    new Point(0.122, 0.618),\n    new Point(0, 1),\n    new Point(-0.12, 0.627),\n    new Point(-0.5, 0.604),\n    new Point(-0.198, 0.378),\n  ];\n  this.drawTime = 10;\n  Shape.call(\n    this,\n    map(this.template, (el) => transformation.apply(el)),\n    transformation.size,\n    color,\n    thickness,\n    style,\n    fade\n  );\n}\nfunction SixPointStar(\n  transformation,\n  color = black,\n  thickness = 1,\n  style = \"stroke\"\n) {}\n\nfunction Transformation(a, b, c, d, e, f, color = black, fade = 0) {\n  // matrix notation for a linear transformation\n  // if a vector is expressed as (x,y,1), the Transformation is equivalent to the matrix:\n  // ( a c e )\n  // ( b d f )\n\n  // interpretation:\n  // a = horizontal scaling\n  // b = vertical skewing\n  // c = horizontal skewing\n  // d = vertical scaling\n  // e = horizontal translation\n  // f = vertical translation\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n  this.e = e;   \n  this.f = f;\n\n  this.xscale = (a ** 2 + b ** 2) ** 0.5;\n  this.yscale = (c ** 2 + d ** 2) ** 0.5;\n\n  this.size = Math.max(this.xscale, this.yscale);\n\n  //color attributes\n  this.r = color.r;\n  this.g = color.g;\n  this.bl = color.b;\n  this.fade = fade;\n}\nTransformation.prototype.apply = function (operand) {\n  // Transformation application function. Accepts points, shapes, and other transformations.\n  // Input MUST be point, shape, or transformation.\n\n  clrScale = (operand.fade * this.fade) ** 2;\n\n  if (operand instanceof Point) {\n    let x = operand.x;\n    let y = operand.y;\n\n    return new Point(\n      this.a * x + this.c * y + this.e,\n      this.d * y + this.b * x + this.f\n    );\n  } else if (operand instanceof Transformation) {\n    var a0 = operand.a;\n    var b0 = operand.b;\n    var c0 = operand.c;\n    var d0 = operand.d;\n    var e0 = operand.e;\n    var f0 = operand.f;\n\n    var a = this.a * a0 + this.c * b0;\n    var b = this.b * a0 + this.d * b0;\n    var c = this.a * c0 + this.c * d0;\n    var d = this.b * c0 + this.d * d0;\n    var e = this.a * e0 + this.c * f0 + this.e;\n    var f = this.b * e0 + this.d * f0 + this.f;\n\n    var clr = new Color(this.r, this.b, this.g);\n\n    return new Transformation(a, b, c, d, e, f, clr, this.fade);\n  } else if (operand instanceof Circle) {\n    let r = operand.color.r + (this.r - operand.color.r) * clrScale;\n    let g = operand.color.g + (this.g - operand.color.g) * clrScale;\n    let b = operand.color.b + (this.bl - operand.color.b) * clrScale;\n\n    let newPts = map(operand.points, (el) => this.apply(el));\n    let newSize = operand.size * this.size;\n    let newClr = new Color(r, g, b);\n\n    let c = new Circle(id, newClr, operand.thickness, operand.style, operand.fade);\n    c.points = newPts;\n    c.size = newSize;\n\n    return c;\n  } else {\n    let r = operand.color.r + (this.r - operand.color.r) * clrScale;\n    let g = operand.color.g + (this.g - operand.color.g) * clrScale;\n    let b = operand.color.b + (this.bl - operand.color.b) * clrScale;\n\n    let newPts = map(operand.points, (el) => this.apply(el));\n    let newSize = operand.size * this.size;\n    let newClr = new Color(r, g, b);\n\n    let newShp = new Shape(newPts, newSize, newClr, operand.thickness, operand.style, operand.fade);\n    newShp.drawTime = operand.drawTime;\n    return newShp;\n  }\n};\n\nTransformation.generateTransformation1 = function (\n  start,\n  end,\n  unit = 1,\n  color = black,\n  fade = 0\n) {\n  //relative rotation\n  var vec = {\n    x: end.x - start.x,\n    y: end.y - start.y,\n  };\n  var h = (vec.x ** 2 + vec.y ** 2) ** 0.5; //hypotenuse\n\n  var theta_1 = Math.atan2(start.y, start.x);\n  var theta_2 = Math.atan2(vec.y, vec.x);\n\n  var dt = theta_2 - theta_1;\n  let adj = cos(dt);\n  let opp = sin(dt);\n\n  let scale = Math.min(h / unit, meta.maxScale);\n\n  var a = scale * adj;\n  var b = scale * opp;\n  var c = -scale * opp;\n  var d = scale * adj;\n  var e = start.x;\n  var f = start.y;\n\n  return new Transformation(a, b, c, d, e, f, color, fade);\n};\n\nTransformation.generateTransformation2 = function (\n  angle,\n  size,\n  dx,\n  dy,\n  unit = 1,\n  color = black,\n  fade = 0\n) {\n  // simple method to generate a transformation.\n  let opp = sin(angle) * size;\n  let adj = cos(angle) * size;\n\n  return new Transformation(adj, opp, -opp, adj, dx, dy, color, fade);\n};\n\nTransformation.generateTransformation3 = function (\n  start,\n  end,\n  unit = 1,\n  color = black,\n  fade = 0,\n  maxSize = meta.maxSize\n) {\n  //absolute rotation.\n  let dx = end.x - start.x;\n  let dy = end.y - start.y;\n\n  let angle = Math.atan2(dy, dx) - Math.PI / 2;\n  let h = Math.min((dx ** 2 + dy ** 2) ** 0.5, maxSize);\n\n  var a = h * cos(angle);\n  var b = h * sin(angle);\n  var c = -h * sin(angle);\n  var d = h * cos(angle);\n  var e = start.x;\n  var f = start.y;\n\n  return new Transformation(a, b, c, d, e, f, color, fade);\n};\n\n// a few transformations that are useful\nlet id = new Transformation(1, 0, 0, 1, 0, 0);\n// ++++++++++++++++++++++++++++++ Auxilliary helper functions ++++++++++++++++++++++++++++++++++++++++++++++\nfunction clear(ctx) {\n  // clears the given context\n  let c = ctx.canvas;\n  let width = c.width;\n  let height = c.height;\n  // NOTE in general, I would need to find the inverse of this transformation,\n  // Apply it to (0,0, width, height)\n  // then call clearRect on that transformed value.\n  // but since I know what kind of transformation storedTransform is, I can shortcut it, without having to calculate the inverse.\n  ctx.clearRect(-width / 2 - 71, -height / 2, width, height);\n}\n\nfunction createCanvas() {\n  // creates a new canvas. Returns a reference to that canvas's context.\n  let newCanvas = document.createElement(\"canvas\");\n  newCanvas.width = width;\n  newCanvas.height = height;\n  document.querySelector(\"#canvasHolder\").appendChild(newCanvas);\n\n  let ctx = newCanvas.getContext(\"2d\");\n\n  return ctx;\n}\nfunction zeroFill(number, width) {\n  let s = number.toString();\n\n  while (s.length < width) {\n    s = \"0\" + s;\n  }\n  return s;\n}\nfunction filter(arr, fn) {\n  var result = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (fn(arr[i])) {\n      result.push(arr[i]);\n    }\n  }\n  return result;\n}\n\nfunction map(arr, fn) {\n  var result = [];\n  for (var i = 0; i < arr.length; i++) {\n    result[i] = fn(arr[i]);\n  }\n  return result;\n}\n\nfunction radius(arr) {\n  m = 0;\n  let distance = (p1, p2) =>\n    Math.max(Math.abs(p1.x - p2.x), Math.abs(p1.y - p2.y));\n\n  for (var i = 0; i < arr.length; i++) {\n    for (var j = i; j < arr.length; j++) {\n      m = Math.max(m, distance(arr[i], arr[j]));\n    }\n  }\n  return m;\n}\n\nfunction ceiling(n) {\n  return -Math.floor(-n);\n}\n\nfunction cache(f) {\n  var dict = {};\n  function helper() {\n    let s = JSON.stringify(arguments);\n    if (dict[s] === undefined) {\n      let r = f.apply(null, arguments);\n      dict[s] = r;\n      return r;\n    } else {\n      return dict[s];\n    }\n  }\n  return helper;\n}\n\nfunction hexToDecimal(n) {\n  // takes a hex string and returns a decimal number;\n  let map = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15,\n  };\n  let result = 0;\n  let power = 0;\n  while (n.length !== 0) {\n    result += 16 ** power * map[n[n.length - 1]];\n    power += 1;\n    n = n.slice(0, n.length - 1);\n  }\n  return result;\n}\n\nfunction decimalToHex(n) {\n  let map = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    10: \"A\",\n    11: \"B\",\n    12: \"C\",\n    13: \"D\",\n    14: \"E\",\n    15: \"F\",\n  };\n\n  let result = \"\";\n  while (n !== 0) {\n    result = map[n % 16] + result;\n    n = Math.floor(n / 16);\n  }\n  return result;\n}\nfunction max(arr, f = (x) => x) {\n  if (arr.length == 0) {\n    return [0, -1];\n  }\n\n  let m = f(arr[0]);\n  let idx = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (f(arr[i]) > m) {\n      m = f(arr[i]);\n      idx = i;\n    }\n  }\n  return [m, idx];\n}\nfunction average(arr, f = (x) => x) {\n  if (arr.length == 0) {\n    return 0;\n  }\n\n  let cum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    cum += f(arr[i]);\n  }\n\n  return cum / arr.length;\n}\n\n// node counting\nfunction knapsack(A, r) {\n  var sum = 1;\n  if (r <= 0) {\n    return 0;\n  }\n  for (var i = 0; i < A.length; i++) {\n    sum += knapsack(A, r - A[i]);\n  }\n\n  return sum;\n}\nknapsack = cache(knapsack);\n\nfunction countNodes(branches, objects, renderThreshold) {\n  // returns the number of nodes in a tree comprised of branches of radius radii, of max root size maxSize, and of render size limit renderThreshold.\n  // assumptions:\n  //\t 0 < radii[i] <= 0.9 all i\n  //   renderThreshold > 0;\n\n  //base case\n  if (branches.length === 0) {\n    if (maxSize === 0) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  // for counting depth, the most relevant is the max sized object.\n  maxSize = max(objects, (x) => x.size);\n\n  // Calculating\n  let ratio = renderThreshold / maxSize;\n  let depths = [];\n  let maxDepth = 0;\n  for (var i = 0; i < branches.length; i++) {\n    let d = Math.min(\n      100,\n      Math.round(Math.log(ratio) / Math.log(branches[i].transformation.size))\n    );\n    depths.push(d);\n    maxDepth = Math.max(maxDepth, d);\n  }\n\n  for (var i = 0; i < branches.length; i++) {\n    depths[i] = Math.floor(maxDepth / depths[i]);\n  }\n\n  let nodes = knapsack(depths, maxDepth);\n\n  return nodes;\n}\n\nfunction calculateDrawTime() {\n  // *ROUGH* calculation on how long it'll take to draw the fractal.\n\n  // time = time per frame * number of frames\n  //      = (1/fps) * (number of operations / 5000)\n  let time =\n    (1 / 60) *\n    (fractal.objects.length *\n      countNodes(fractal.branches, fractal.objects, meta.renderThreshold));\n\n  //output\n  return time;\n}\n\nfunction save() {\n  // 'to blob' paramater function. Specified what's to be done with the blob once it is created.\n  function saveContext(blob) {\n    // create a url of the blob\n    var blobURL = URL.createObjectURL(blob);\n    // open it in a new tab\n    window.open(blobURL);\n  }\n  // stop drawing while this takes place\n  renderInterrupt = true;\n  // create a new canvas\n  const destCtx = createCanvas();\n  // fill in the background for the new canvas\n  destCtx.fillStyle = meta.backgroundColor.toString();\n  destCtx.fillRect(0, 0, width, height);\n  // copy all other canvases onto this new canvas\n  for (let i = 0; i < fractal.objects.length; i++) {\n    srcImage = fractal.contexts[i].canvas;\n    destCtx.drawImage(srcImage, 0, 0);\n  }\n  // save the canvas\n  destCtx.canvas.toBlob(saveContext, (type = \"image/png\"));\n  // delete the canvas\n  destCtx.canvas.remove();\n  // start drawing again\n  renderInterrupt = false;\n  // return\n  return;\n}\n"],"names":["startRender","test","sin","Math","cos","objectRenderArray","meta","style","Line","colorStyle","thickness","drawColor","Color","backgroundColor","fillStyle","clrscale","fadeVal","renderThreshold","maxDepth","maxScale","maxSize","operationLimit","unit","metaCopy","fractal","objects","branches","contexts","drawState","opcount","i","stack","draw","length","push","node","size","pop","drawTime","trans","transformation","apply","resetState","start","end","type","black","fade","Branch","forEach","ctx","clear","Transformation","generateTransformation1","createCanvas","setTransform","width","height","new_obj","generateTransformation3","canvas","remove","actionObject","ctrl","z","actions","undoList","unundo","lastAction","unundoList","y","undo","noctrl","r","g","b","hex","this","hexToDecimal","Point","x","Shape","points","color","undefined","radius","build","last","moveTo","el","lineTo","boundaries","left","right","bottom","top","fillRect","lineWidth","strokeStyle","beginPath","stroke","fill","template","call","map","Triangle","Curve","Oval","Circle","arc","PI","RightTriangle","Rectangle","Pentagon","Hexagon","Septagon","Octagon","RoundedRectangle","Polygon","RightArrow","LeftArrow","UpArrow","DownArrow","FourStar","FiveStar","SixPointStar","a","c","d","e","f","xscale","yscale","max","bl","colorMap","grey","darkred","red","orange","yellow","lawngreen","green","cadetblue","blue","violet","purple","cyan","lightsalmon","lightyellow","lime","mistyrose","slateblue","tomato","white","prototype","toString","zeroFill","decimalToHex","operand","clrScale","a0","b0","c0","d0","e0","f0","newPts","newSize","newClr","id","newShp","vec","h","theta_1","atan2","dt","adj","opp","scale","min","generateTransformation2","angle","dx","dy","clearRect","newCanvas","document","createElement","querySelector","appendChild","getContext","number","s","filter","arr","fn","result","m","j","p1","p2","abs","ceiling","n","floor","cache","dict","JSON","stringify","arguments","map1","A","B","C","D","E","F","power","slice","map2","idx","average","cum","knapsack","sum","countNodes","ratio","depths","round","log","calculateDrawTime","save","renderInterrupt","destCtx","srcImage","drawImage","toBlob","blob","blobURL","URL","createObjectURL","window","open"],"version":3,"file":"index.ec5fe514.js.map"}